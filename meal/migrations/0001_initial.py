# Generated by Django 4.2.8 on 2024-01-10 07:46

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CalorieDictionary",
            fields=[
                (
                    "food_code",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("food_name", models.CharField(max_length=100)),
                ("maker", models.CharField(max_length=100)),
                ("major_class", models.CharField(max_length=50)),
                ("detail_class", models.CharField(max_length=50)),
                (
                    "one_serve_amount_g_field",
                    models.FloatField(
                        blank=True, db_column="one_serve_amount(g)", null=True
                    ),
                ),
                (
                    "total_amount_g_field",
                    models.FloatField(
                        blank=True, db_column="total_amount(g)", null=True
                    ),
                ),
                ("calories", models.FloatField(blank=True, null=True)),
                ("water", models.FloatField(blank=True, null=True)),
                ("protein", models.FloatField(blank=True, null=True)),
                ("fat", models.FloatField(blank=True, null=True)),
                ("carbohydrate", models.FloatField(blank=True, null=True)),
                ("suger", models.FloatField(blank=True, null=True)),
                ("dietary_fiber", models.FloatField(blank=True, null=True)),
                ("natrium", models.FloatField(blank=True, null=True)),
                ("total_sfa", models.FloatField(blank=True, null=True)),
                ("total_tfa", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "calorie_dictionary",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Meal",
            fields=[
                (
                    "postnum",
                    models.BigIntegerField(
                        db_column="postNum", primary_key=True, serialize=False
                    ),
                ),
                ("meal_date", models.DateTimeField(blank=True, null=True)),
                ("meal_photo", models.CharField(blank=True, max_length=255, null=True)),
                ("meal_info", models.TextField(blank=True, null=True)),
                ("meal_type", models.CharField(blank=True, max_length=20, null=True)),
                ("meal_calories", models.FloatField(blank=True, null=True)),
                ("nutrient_info", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "meal",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UsersAppUser",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("username", models.CharField(blank=True, max_length=18, null=True)),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                ("password", models.CharField(blank=True, max_length=18, null=True)),
                (
                    "profile_img",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("date_joined", models.DateTimeField(blank=True, null=True)),
                ("user_age", models.DateField(blank=True, null=True)),
                ("user_height", models.FloatField(blank=True, null=True)),
                ("user_weight", models.FloatField(blank=True, null=True)),
                (
                    "user_activity",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("user_gender", models.IntegerField(blank=True, null=True)),
                ("user_target_weight", models.IntegerField(blank=True, null=True)),
                ("user_daily_calorie", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "users_app_user",
                "managed": False,
            },
        ),
    ]
